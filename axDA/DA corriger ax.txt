---*Calcul de a^x
Obtenir base, exposant, nbDecimales
exposant *= ln(base)
if (exposant < 0)
negatif = true
exposant *= -1
endif
if (exposant < 0.5)
module(CalculNombreItération;nbDecimales,exposant;nbItérations)
module(Calcul;exposant,nbItérations;résultat)
else
module(EstMultipleDe05;exposant;multipleDe05)
if (multipleDe05)
argMod = exposant
else
argMod = (((exposant * 2) + 1)ENT ) / 2
endif
module(CalculNombreDécimalesNécessairePourChaqueTerme;argMod,nbDécimales;nbDécimalesNécessaires)
module(ObtentionNombreItération;nbDécimalesNécessaires,exposant;nbItérations)
nombreDeFois05 = (exposant *2)ENT
reste = exposant - (0.5 * nombreDeFois05)
arg = 0.5
module(Calcul;arg,nbItérations;résultatPartiel)
résultat = 1
i = nombreDeFois05
do while (i > 0)
résultat *= résultatPartiel
i--
enddo
if (reste > 0)
arg = reste
module(Calcul;arg,nbItérations;résultatDuReste)
résultat *= résultatDuReste
endif
endif
if (negatif)
résultat = 1 / résultat
endif
Sortir résultat
------

---*CalculNombreItération
module(CalculErreurRelativeMax;nbDécimales;erreurRelativeMax)
nbItérations = 1
essai = ( (exposant / 2) * (0.5 ^ (nbItérations + 1) ) ) / ( (nbItérations + 1) ! )
do while (essai > erreurRelativeMax)
nbItérations++
essai = ( (exposant / 2) * (0.5 ^ (nbItérations + 1) ) ) / ( (nbItérations + 1) ! )
enddo
Sortir nbItérations
------
---*CalculErreurRelativeMax
erreurRelativeMax = 0.5
nombre = 10
do while (nbDecimalesNécessaire > 0)
nombre *= 10
nbDecimalesNécessaire--
enddo
Sortir erreurRelativeMax *= (1 / nombre)
------
---*CalculNombreDécimalesNécessairePourChaqueTerme
p = (( nbDécimales + (argMod - 0.5) * 0.5 + (argMod/5) + 0.31 ) + 1)ENT
Sortir p
------
---*Calcul
résultat = 1
degré = 1
do while (degré <= nbItérations)
module(DegréN;arg, degré;résultatDegréI)
résultat += résultatDegréI
degré++
enddo
Sortir résultat
------
---*MultipleDe05
do while (exposant > 0)
exposant -= 0.5
enddo
if (exposant == 0)
multipleDe05 = true
else
multipleDe05 = false
endif
Sortir mutlipleDe05
------
---*DegréN
Sortir (arg ^ degré) / (degré !)
------
