┌─── *Calcul de a^x
│ Obtenir base, exposant, nbDecimales
│ exposant *= ln(base)
│┌── if (exposant = 0)
││ résultat = 1
│├── else
││┌── if (exposant < 0)
│││ negatif = true
│││ exposant *= -1
││└──
││┌── if (exposant < 0.5)
│││ o───────────────────────o ↓ nbDecimales,exposant
│││ │ CalculNombreItération │
│││ o───────────────────────o ↓ nbItérations
│││ o────────o ↓ exposant,nbItérations
│││ │ Calcul │
│││ o────────o ↓ résultat
││├── else
│││ o─────────────────o ↓ exposant
│││ │ EstMultipleDe05 │
│││ o─────────────────o ↓ multipleDe05
│││┌── if (multipleDe05)
││││ argMod = exposant
│││├── else
││││ argMod = (((exposant * 2) + 1)ENT ) / 2
│││└──
│││ o────────────────────────────────────────────────o ↓ argMod,nbDécimales
│││ │ CalculNombreDécimalesNécessairePourChaqueTerme │
│││ o────────────────────────────────────────────────o ↓ nbDécimalesNécessaires
│││ o────────────────────────o ↓ nbDécimalesNécessaires,exposant
│││ │ CalculNombreItérations │
│││ o────────────────────────o ↓ nbItérations
│││ nombreDeFois05 = (exposant *2)ENT
│││ reste = exposant - (0.5 * nombreDeFois05)
│││ arg = 0.5
│││ o────────o ↓ arg,nbItérations
│││ │ Calcul │
│││ o────────o ↓ résultatPartiel
│││ résultat = 1
│││ i = nombreDeFois05
│││╔══ do while (i > 0)
│││║ résultat *= résultatPartiel
│││║ i--
│││╙──
│││┌── if (reste > 0)
││││ arg = reste
││││ o────────o ↓ arg,nbItérations
││││ │ Calcul │
││││ o────────o ↓ résultatDuReste
││││ résultat *= résultatDuReste
│││└──
││└──
││┌── if (negatif)
│││ résultat = 1 / résultat
││└──
│└──
│ Sortir résultat
└──────────
┌─── *CalculNombreItérations
│ o─────────────────────────o ↓ nbDécimales
│ │ CalculErreurRelativeMax │
│ o─────────────────────────o ↓ erreurRelativeMax
│ nbItérations = 1
│ essai = ( (E) * (0.5 ^ (nbItérations + 1) ) ) / ( (nbItérations + 1) ! )
│╔══ do while (essai > erreurRelativeMax)
│║ nbItérations++
│║ essai = ( (exposant / 2) * (0.5 ^ (nbItérations + 1) ) ) / ( (nbItérations + 1) ! )
│╙──
│ Sortir nbItérations
└──────────
┌─── *CalculErreurRelativeMax
│ erreur = 0.5
│ nombre = 10
│╔══ do while (nbDecimalesNécessaire > 0)
│║ nombre *= 10
│║ nbDecimalesNécessaire--
│╙──
│ Sortir erreur *= (1 / nombre)
└──────────
┌─── *CalculNombreDécimalesNécessairePourChaqueTerme
│ p = (( nbDécimales + (argMod - 0.5) * 0.5 + (argMod/5) + 0.31 ) + 1)ENT
│ Sortir p
└──────────
┌─── *Calcul
│ résultat = 1
│ degré = 1
│╔══ do while (degré ≤ nbItérations)
│║ o────────o ↓ arg, degré
│║ │ DegréN │
│║ o────────o ↓ résultatDegréI
│║ résultat += résultatDegréI
│║ degré++
│╙──
│ Sortir résultat
└──────────
┌─── *MultipleDe05
│╔══ do while (exposant > 0)
│║ exposant -= 0.5
│╙──
│┌── if (exposant == 0)
││ multipleDe05 = true
│├── else
││ multipleDe05 = false
│└──
│ Sortir mutlipleDe05
└──────────
┌─── *DegréN
│ Sortir (arg ^ degré) / (degré !)
└──────────
